// Interpolation - templating strings against var

$color-r: red;
$color-g: green;
$color-b: blue;

$width : 100;

// .#{$color-p} {      // .red {color: red}
//   color: $color-p;  
// }

// .box-#{"" + $color-r}-#{$width} {
//   background: $color-r;
//   width: $width;
//   aspect-ratio: 1 / 1;
// }

// .box-#{"" + $color-b}-#{$width + 50} {
//   background: #{$color-b};
//   width: #{$width + 50};
//   aspect-ratio: 1 / 1;
// }

// .box-#{"" + $color-g}-#{$width + 100} {
//   background: #{$color-g};
//   width: #{$width + 100};
//   aspect-ratio: 1 / 1;
// }


@mixin box($color, $size: 1){
  &-#{"" + $color}-#{$width * $size}{
    background: #{$color};
    width: #{$width * $size}px;
    aspect-ratio: 1 / 1;
  }
}


.box {
  @include box($color-b);

  @include box($color-g, 1.5);

  @include box($color-r, 2);
}


// @mixins - store propertys in css but don't output till called @include

@mixin uppercase-bold-text {
  text-transform: uppercase;
  font-weight: bold;
  letter-spacing: 1px;
}

@mixin small-uppercase-span {
  span {
    font-size: 0.875em;
    text-transform: uppercase;
  }
}

// @mixin example($arg) {
//   property: $arg;
// }

/*

//Agr in mixins

@mixin fs-heading($fs-size){
  font-size: $fs-size;
}

.page-title {
  @include fs-heading($fs-size: 10px);
  @include fs-heading(10px);
  line-height: 1.1;
  @include small-uppercase-span;
}

*/

/*

// Default args

@mixin linearGradient($deg: -45deg, $clr-1: red, $clr-2: blue) {
  background-image: linear-gradient($deg, $clr-1, $clr-2);
}

// When only some arguments are optional
@mixin linear-gradient($clr-1, $clr-2, $deg: -45deg) {
  background-image: linear-gradient($deg, $clr-1, $clr-2);
}

.hero {
  @include linearGradient;
}

//Overwriting

.call to action {
  @include linearGradient($clr-2);
}


*/
$clr-pri: black;
$clr-primary: #ff0000;
$clr-secondary: #0000ff;

:root {
  --clr-primary: limegreen;
}

$gradient: linear-gradient(45deg, $clr-primary, $clr-secondary);

$red: hsl(5, 72%, 53%);

.bg-red-50 {
  background-color: rgb($red, 0.5);
}

.img {
  background-image: url("/src/Img/samsung-memory-m587InP07os-unsplash.jpg");
  width: 360px;
  height: 480px;
  background-repeat: no-repeat;
  background-size: contain;
}

$clr-white: #f8f7f7;
$clr-black: #201e1f;
$clr-red: #da3f0b;
$card-width: 640px;
$radii: 5px;
$btn-width: 120px;
$btn-height: 40px;

$bx-sh: 1px 1px 10px -5px $clr-black;

body {
  color: $clr-black;
  background-color: $clr-white;
}

.card {
  max-width: $card-width;
  height: min-content;
  padding: 25px 30px;
  margin-bottom: 50px;

  box-shadow: $bx-sh;

  &__title {
    color: $clr-red;
  }

  &__cta {
    width: max-content;
    height: 50px;
    display: flex;
  }

  &__btn {
    width: $btn-width;
    height: $btn-height;
    margin-right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;

    &:link {
      text-decoration: none;
    }
  }
}

.btn {
  &--primary {
    background-color: $clr-red;
    color: $clr-white;
  }

  &--outline {
    color: $clr-red;
  }

  &--primary,
  &--outline {
    border-radius: $radii;
    border: 2px solid $clr-red;

    &:hover {
      background-color: $clr-black;
      box-shadow: $bx-sh;
    }
  }
}

/*
# Colors

## White: #f8f7f7

- page background
- primary button text color
- outline button background
- hover text color for both buttons

## Black: #201e1f

- body color
- button hover/focus background
- shadow color on the card

## Red: #da3f0b

- title color
- button borders (both buttons)
- primary button background
- outline button text color
- button hover/focus shadow

*/

// var(--clr) - are rendered live in the browser which open the possiblity of js

// //Var define var - globe scoped

/*
    Application - global adjustable values
--------------------    
    Color values

    Font sizes

    Spacing values

    Box shadows

    Gradients

    Border radii

    Media query

*/

// $gradient : linear-gradient(45deg, $clr-primary, $clr-secondary);

// //Block scoped
// .header {
//   color: $gradient;

//   &-nav-link {
//     color: $clr-pri;
//   }
// }

// $clr-font-pri : $clr-pri;

//Nesting media queries

// .product-card {
//   padding: 0.5rem;
//   border-radius: 1rem;
//   box-shadow: 0 0 1em rgb(0, 0, 0, 0.2);

//   &__title {
//     font-size: 1.5rem;
//   }

//   @media (min-width: 45em) {
//     padding: 0.75rem;
//   }

//   @media (min-width: 60rem) {
//     padding: 1rem;
//     display: flex;

//     &__title {
//       font-size: 2.5rem;
//     }
//   }
// }

//Trailing or use has

// .text-centered {
//     text-align: center;
// }

// .text-centered:has(p){
//     max-width: 60ch;
// }

// p {
//   max-width: 60ch;
//   line-height: 1.5rem;

//   .text-centered & {
//     margin-inline: auto;
//   }
// }

// .text-centered {
//   text-align: center;
// }

// .btn {
//   display: inline-block;
//   padding: 1em 2em;
//   color: white;
//   cursor: pointer;
//   border: none;
//   text-decoration: none;
//   text-transform: uppercase;

//   &__primary {
//     background: #3f637d;

//     &:hover,
//     &:focus {
//       background: #2b4355;
//     }
//   }

//   &__secondary {
//     background: #4c4171;

//     &:hover,
//     &:focus {
//       background: #2b2541;
//     }
//   }

//   &__accent {
//     background: #efca5d;

//     &:hover,
//     &:focus {
//       background: #d1a215;
//     }
//   }
// }

//BEM / BLOCK ELEMENT MODIFIER

/*
.card {
  padding: 1rem;

    &__title {
		font-size: 3rem;
    }

	&__subtitle {
		font-size: 1.75rem;
	}

	&__body {
    color: #333;
  }
}
*/

// Nesting css properties

// a {
//     text: {
//         transform: uppercase;
//         decoration: none
//     }
// }

// Nesting selectors

// .primary-article {
//     padding: 3rem 1rem;

//     .title {
//         font-size: 5rem;

//         span {
//             color: red;
//         }
//     }
// }

// .pointing-list {
//     margin: 2rem 0;

//     li {
//         padding-left: 0.5rem;
//     }

//     li::marker {
//         content: "ðŸ‘‰";
//     }
// }
// .primary-navigation {
//     padding: 1rem;

//     ul {
//         display: flex;
//         gap: 1rem;
//         margin: 0;
//         padding: 0;
//     }

//     a {
//         text-overflow: uppercase;
//     }
// }

// .card {
//     position: relative;
//     padding: 1rem;

//     & .title {
//         font-size: 2rem;

//         &__::after {
//             content: '';
//             background-color: lime;
//             display: block;
//             height: 1px;
//         }
//     }
// }

// // https://utopia.fyi/
// // https://smolcss.dev/
// // https://moderncss.dev/

// /* @link https://utopia.fyi/type/calculator?c=320,18,1.2,900,64,1.067,7,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

// :root {
//   --step--2: clamp(0.7813rem, -0.7262rem + 7.537vw, 3.5134rem);
//   --step--1: clamp(0.9375rem, -0.6136rem + 7.7554vw, 3.7488rem);
//   --step-0: clamp(1.125rem, -0.4612rem + 7.931vw, 4rem);
//   --step-1: clamp(1.35rem, -0.2599rem + 8.0497vw, 4.268rem);
//   --step-2: clamp(1.62rem, 0.0013rem + 8.0937vw, 4.554rem);
//   --step-3: clamp(1.944rem, 0.3357rem + 8.0416vw, 4.8591rem);
//   --step-4: clamp(2.3328rem, 0.7594rem + 7.8671vw, 5.1846rem);
//   --step-5: clamp(2.7994rem, 1.2917rem + 7.5383vw, 5.532rem);
//   --step-6: clamp(3.3592rem, 1.956rem + 7.0163vw, 5.9026rem);
//   --step-7: clamp(4.0311rem, 2.7803rem + 6.2539vw, 6.2981rem);
// }

// // extend fn - to avoid compliation of alot of code we use the percentage;
// // Don't use with selectors with high specifity;

// %bg-dark {
//   background: black;
//   padding: 1em;
// }

// .inverted-colors {
//   color: white;
//   @extend %bg-dark;
// }
